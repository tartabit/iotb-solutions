{
  "services": [
    {
      "id": "61aa3e871af54a293a4b31d8",
      "name": "Micron - Track",
      "key": "micron-track",
      "modelId": "81f51ae0b339efbe51e8cdcb"
    }
  ],
  "triggers": [
    {
      "id": "61aa3e771af54a293a4b31d7",
      "name": "Micron - Send data to Track",
      "type": "script",
      "def": "var model = {  \r\n  name: event.data.data.key,\r\n  event: event.data.data.event,\r\n  values: {}\r\n}\r\n\r\nif(event.data.data.gps) {\r\n    var gps = event.data.data.gps\r\n    model.location = {lat: gps.latitude, lon: gps.longitude}\r\n    model.values.speed = gps.speed\r\n    model.values.heading = gps.heading\r\n    var gpsTs = date.parse(gps.ts,'rfc3339')\r\n    var repTs = date.parse(event.data.data.ts,'rfc3339')\r\n    model.values.locAge = (repTs - gpsTs)/1000\r\n}\r\n\r\nmodel.values.battery = event.data.data.battery\r\nmodel.values.motion = event.data.data.motion\r\nmodel.values.ignition = event.data.data.ignition\r\nmodel.values.extPower = event.data.data.extPower\r\n\r\nif(event.data.data.net) {\r\n    try {\r\n        var netInfo = convert.mccmnc(event.data.data.net.mcc,event.data.data.net.mnc)\r\n        model.values.operator = netInfo.operator\r\n    } catch(e) {\r\n        log.warn('network lookup failed: '+ e)\r\n    }\r\n}\r\n\r\ntrack.publish('micron-track',event.data.data.key,event.data.data.ts,model)",
      "filterType": "generic",
      "filterCustom": {
        "key": {
          "comp": "eq",
          "value": "micron-data"
        }
      }
    }
  ]
}
