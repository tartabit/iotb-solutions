{
  "templateDef": [
    {
      "name": "Solution Prefix",
      "key": "prefix",
      "desc": "Prefix to be prepended on all defined objects.",
      "genWords": 2
    },
    {
      "name": "Device IMEI/Name",
      "key": "device",
      "desc": "The IMEI/name for your Queclink device.",
      "value": "<imei/name>"
    },
    {
      "name": "Azure IoT Central ID Scope",
      "key": "dps_id_scope",
      "desc": "Enter the ID Scope for your IoT Central application.",
      "value": "0nexxxxxxx"
    },
    {
      "name": "Azure IoT Central Access Key",
      "key": "dps_access_key",
      "desc": "Enter the primary or secondary shared access key for group enrollment."
    }
  ],
  "endpoints": [
    {
      "id": "6092be73282d561a133ea5f7",
      "serviceId": "6092bd08943d9e84f1ce5aca",
      "name": "{{ .device }}",
      "key": "{{ .device }}"
    }
  ],
  "services": [
    {
      "id": "6092bed1943d9e84f1ce5acb",
      "name": "Azure IoT Central ({{.prefix}})",
      "key": "{{.prefix}}_azure_iotcentral",
      "modelId": "811382a6ea7fb1f40f682af3",
      "params": {
        "activity_timeout": "600",
        "authentication": "DPS",
        "dps_id_scope": "{{.dps_id_scope}}",
        "dps_access_key": "{{.dps_access_key}}"
      }
    },
    {
      "id": "6092bd08943d9e84f1ce5aca",
      "name": "Queclink Connector ({{.prefix}})",
      "key": "{{.prefix}}_queclink",
      "modelId": "817e139902a320822f8709d7"
    }
  ],
  "triggers": [
    {
      "id": "6092e6e0943d9e84f1ce5acd",
      "name": "Queclink report to Azure IoT Central ({{.prefix}})",
      "type": "script",
      "def": "var telem = {}\nif(event.data.report.temperature) {\n  telem.temperature = event.data.report.temperature\n}\nif(event.data.report.location) {\n  telem.location = {\n    lat: event.data.report.location.latitude,\n    lon: event.data.report.location.longitude\n  }\n  if(event.data.report.location.altitude) {\n      telem.location.alt = event.data.report.location.altitude\n  }\n  if(event.data.report.location.speed) {\n      telem.speed = event.data.report.location.speed\n  }\n  if(event.data.report.location.heading) {\n      telem.heading = event.data.report.location.heading\n  }\n  \n}\n\nif(event.data.report.battery) {\n  telem.battery = event.data.report.battery\n}\n\nif(event.data.report.motion) {\n  telem.moving = event.data.report.motion\n} else {\n  telem.moving = false\n}\n\nif(event.data.report.network) {\n  telem.rssi =event.data.report.network.rssi\n}\n\ntelem.reason = event.data.report.messageTypeDetail\n\n\nvar twin = {}\nif(event.data.report.network) {\n    twin.networkProvider = event.data.report.network.mcc + event.data.report.network.mnc\n    twin.networkTechnology = 'LTE Cat-M'\n}\n\nazure_iot.send('{{.prefix}}_azure_iotcentral', event.endpoint.key, telem);\nazure_iot.twin_update('{{.prefix}}_azure_iotcentral', event.endpoint.key, twin);",
      "filterServiceId": "6092bd08943d9e84f1ce5aca",
      "filterType": "queclink-report"
    }
  ]
}
