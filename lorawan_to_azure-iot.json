{
  "templateDef": [
    {
      "name": "Azure connection string",
      "key": "conn_string",
      "desc": "Enter the connection string for a policy with 'iothubowner' rights.",
      "value": "HostName=****.azure-devices.net;SharedAccessKeyName=iothubowner;SharedAccessKey=********"
    }
  ],
  "services": [
    {
      "id": "5ff76adfa6c6e3f890ce9408",
      "name": "Azure IoT Hub",
      "key": "azure_iothub",
      "modelId": "811382a6ea7fb1f40f682af3",
      "params": {
        "activity_timeout": "3600",
        "authentication": "ServiceAccount",
        "connection_string": "{{.conn_string}}"
      }
    }
  ],
  "triggers": [
    {
      "id": "6022aa512c49e3e9aa9f449c",
      "name": "Decode sample data",
      "version": 0,
      "type": "script",
      "def": "var binData = convert.b64ToBin(event.data.data.data)\r\ntemperature = binData[5] + binData[4]/100;\r\nhumidity = binData[3] + binData[2]/100;\r\nbattery = binData[6]*20;\r\nexec.now('data', {endpointKey: event.endpoint.key, ts: event.ts, temperature: temperature, humidity: humidity, battery: battery})",
      "filterType": "generic",
      "filterCustom": {
        "key": {
          "comp": "eq",
          "value": "sample-uplink"
        }
      }
    },
    {
      "id": "601c2abaf9e0e15593398759",
      "name": "LORA Message Router",
      "version": 0,
      "type": "script",
      "def": "exec.now('sample-uplink',{data:event.data.data.data})\r\n\r\n// example of routing based on port to different decoders\r\n/*\r\nif( event.data.data.port===1) {\r\n  exec.now('laird-uplink',{data:event.data.data.data})\r\n} else if(event.data.data.port===15) {\r\n  exec.now('rak7201-uplink',{data:convert.hexToB64(event.data.data.data)})\r\n} else {\r\n  exec.now('rak7200-uplink',{data:event.data.data.data})\r\n}\r\n*/\r\n",
      "filterType": "generic",
      "filterCustom": {
        "key": {
          "comp": "eq",
          "value": "data-uplink"
        }
      }
    },
    {
      "id": "5ff76adfa6c6e3f890ce940c",
      "name": "Send to Azure IoT",
      "version": 0,
      "type": "script",
      "def": "var telem = event.data.data\ntelem.name = event.endpoint.name\ntelem.key = event.endpoint.key\nazure_iot.send('azure_iothub', event.endpoint.key, telem);\nazure_iot.twin_update('azure_iothub', event.endpoint.key, telem);",
      "filterType": "generic",
      "filterCustom": {
        "key": {
          "comp": "eq",
          "value": "data"
        }
      }
    }
  ]
}
