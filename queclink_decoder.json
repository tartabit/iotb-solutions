{
  "templateDef": [
    {
      "name": "UDP Port",
      "key": "port",
      "desc": "Open a support request to have a port assigned.",
      "value": "string"
    }
  ],
  "services": [
    {
      "id": "645e93193855f68ba7567044",
      "name": "Queclink Listener",
      "key": "queclink-listener",
      "modelId": "81418d0e1607815e03483843",
      "params": {
        "extractor": "ascii_delimited",
        "extractor_config": "{\"delim\":\",\", \"index\":2}",
        "port": "{{.port}}",
        "send_events": "false"
      }
    },
    {
      "id": "64daec876c3caaf840775e59",
      "name": "Queclink Alerts",
      "key": "queclink-alerts",
      "modelId": "818c54314c6469493406e874"
    }
  ],
  "triggers": [
    {
      "def": "// turn off this trigger if your device does not expect SACK messages to be sent.\r\n\r\nvar lastComma = event.data.payload.lastIndexOf(',')\r\nvar id = event.data.payload.substr(lastComma + 1, 4)\r\n\r\nif (global.values.queclinkDebug) {\r\n    log.trace('[' + event.endpoint.key + '] SACK [' + id + '] sent', { lastComma: lastComma, id: id })\r\n}\r\nif(event.endpoint!=null) {\r\n    udp.send(event.service.key, event.endpoint.key, '+SACK:' + id + '$')\r\n} else {\r\n    udp.send(event.service.key, event.data.remoteAddr, '+SACK:' + id + '$')\r\n}\r\n",
      "filterServiceId": "{{.svc_queclink-listener}}",
      "filterType": "udp-receive",
      "id": "645e944c3855f68ba756704f",
      "name": "Queclink - Send Ack",
      "type": "script"
    },
    {
      "def": "\r\nif (event.data.payload.startsWith('EXPT:')) {\r\n    log.warn('error communicting with device', event.data.payload)\r\n    trigger.exit()\r\n}\r\n\r\nvar firstComma = event.data.payload.indexOf(',')\r\nvar secondComma = event.data.payload.indexOf(',', firstComma + 1)\r\nvar firstColon = event.data.payload.indexOf(':')\r\n\r\nvar ver = event.data.payload.substring(firstComma + 1, secondComma)\r\nvar cmd = event.data.payload.substring(firstColon + 1, firstComma)\r\n\r\nvar obj = {}\r\n\r\nif (event.data.payload.startsWith('+ACK')) {\r\n    var ackDecoders = {\r\n        GTPEO: 'cmd||key||geoId|ack(string)|ts(timestamp,20060102150405)|seq',\r\n        // +ACK:GTRTO,423134,352009111850124,,VBR,0015,20220124211813,0057$\r\n        GTRTO: 'cmd||key||rto|ack(string)|ts(timestamp,20060102150405)|seq',\r\n        //+ACK:GTHBD,5E0100,861971050041292,,20230422125408,13E3$\r\n        DEFAULT: 'cmd||key||ack(string)|ts(timestamp,20060102150405)|seq'\r\n    }\r\n    var ackDecoder = ackDecoders[cmd] || ackDecoders['DEFAULT']\r\n    obj = convert.delimitedStringToObject(event.data.payload, ackDecoder, ',')\r\n    if(cmd == 'GTHBD') {\r\n        udp.send(event.service.key, event.endpoint.key, '+SACK:GTHBD,'+ ver +',' + obj.seq + '$')\r\n        trigger.exit()\r\n    }\r\n    if (global.values.queclinkDebug) {\r\n        log.trace('[' + event.endpoint.key +'] received [' + cmd + '] ack for [' + obj.ack + ']', event.data)\r\n    }\r\n    if (obj.ack) {\r\n        trigger.signal('queclink:' + obj.key + ':' + obj.ack, { packet: event.data.payload, obj: obj })\r\n    }\r\n    trigger.exit()\r\n}\r\n\r\n//#region field converters\r\nfunction parseStatus() {\r\n    if (obj.temp && obj.temp.status) {\r\n        var motionStatus = obj.temp.status.slice(0, 2)\r\n        switch (motionStatus) {\r\n            case '11':\r\n                obj.motion = false;\r\n                obj.ignition = false;\r\n                break\r\n            case '12':\r\n                obj.motion = true;\r\n                obj.ignition = false;\r\n                break\r\n            case '21':\r\n                obj.motion = false;\r\n                obj.ignition = true;\r\n                break\r\n            case '22':\r\n                obj.motion = true;\r\n                obj.ignition = true;\r\n                break\r\n            case '16':\r\n                obj.motion = true;\r\n                obj.ignition = false;\r\n                break\r\n            case '41':\r\n                obj.motion = false;\r\n                obj.ignition = false;\r\n                break\r\n            case '42':\r\n                obj.motion = true;\r\n                obj.ignition = false;\r\n                break\r\n        }\r\n    }\r\n}\r\n\r\nfunction parsePowerOnType(pot) {\r\n    switch(pot) {\r\n        case 1:\r\n            obj.powerOnType = 'movement'\r\n            break\r\n        case 2:\r\n            obj.powerOnType = 'time'\r\n            break\r\n        case 3:\r\n            obj.powerOnType = 'light'\r\n            break\r\n        case 4:\r\n            obj.powerOnType = 'switch'\r\n            break\r\n        case 5:\r\n            obj.powerOnType = 'rto'\r\n            break\r\n        case 6:\r\n            obj.powerOnType = 'abnormal'\r\n            break\r\n        case 7:\r\n            obj.powerOnType = 'rtc'\r\n            break\r\n        case 8:\r\n            obj.powerOnType = 'fota'\r\n            break\r\n        case 9:\r\n            obj.powerOnType = 'temperature'\r\n            break\r\n    }\r\n}\r\n\r\nfunction parseRssi(rssi) {\r\n    if (rssi <= 0) {\r\n        return -113;\r\n    } else if (rssi >= 31) {\r\n        return -51;\r\n    } else {\r\n        return (rssi * 2) - 113;\r\n    }\r\n}\r\n\r\nfunction parseUpdateCode(code) {\r\n    var status = code\r\n    switch(code) {\r\n        case 100:\r\n        case 110:\r\n        case 170:\r\n            status = 'confirmed'\r\n            break\r\n        case 101:\r\n        case 111:\r\n        case 171:\r\n            status = 'refused'\r\n            break\r\n        case 102:\r\n        case 112:\r\n        case 172:\r\n            status = 'refused-bad-url'\r\n            break\r\n        case 103:\r\n        case 113:\r\n        case 173:\r\n            status = 'refused-low-battery'\r\n            break\r\n        case 114:\r\n            status = 'refused-mcu'\r\n            break\r\n        case 200:\r\n        case 210:\r\n        case 270:\r\n            status = 'download-start'\r\n            break\r\n        case 201:\r\n        case 211:\r\n        case 271:\r\n            status = 'download-success'\r\n            break\r\n        case 202:\r\n        case 212:\r\n        case 272:\r\n            status = 'download-failed'\r\n            break\r\n        case 203:\r\n        case 213:\r\n        case 273:\r\n            status = 'download-bad-version'\r\n            break\r\n        case 300:\r\n        case 310:\r\n        case 370:\r\n            status = 'update-started'\r\n            break\r\n        case 301:\r\n        case 311:\r\n        case 371:\r\n            status = 'update-success'\r\n            break\r\n        case 302:\r\n        case 312:\r\n        case 372:\r\n            status = 'update-failed'\r\n            break\r\n        case 303:\r\n        case 313:\r\n        case 373:\r\n            status = 'update-failed-low-battery'\r\n            break\r\n        case 305:\r\n            status = 'update-interrupted-by-reboot'\r\n            break\r\n        case 306:\r\n            status = 'update-failed-md5-validation'\r\n            break\r\n\r\n    }\r\n    return status\r\n}\r\n//#endregion\r\n\r\nfunction setDesc() {\r\n    var descriptions = {\r\n        GTASC: 'accelerator-calibration',\r\n        GTBPL: 'battery-backup-low',\r\n        GTBTC: 'battery-charge-start',\r\n        GTCID: 'rto-cid',\r\n        GTCSQ: 'rto-csq',\r\n        GTCRA: 'crash',\r\n        GTCRD: 'crash-data',\r\n        GTCRG: 'crash-gnss',\r\n        GTDIS: 'digital-input-change',\r\n        GTDRM: 'device-removal',\r\n        GTDOG: 'watchdog',\r\n        GTEPS: 'external-power-supply-change',\r\n        GTFRI: 'fixed-report',\r\n        GTGEO: 'geofence',\r\n        GTIDF: 'idle-end',\r\n        GTIDN: 'idle-start',\r\n        GTIGL: 'ignition-change',\r\n        GTIGN: 'ignition-on',\r\n        GTIGF: 'ignition-off',\r\n        GTINF: 'info',\r\n        GTJES: 'journey-summary',\r\n        GTLGN: 'login',\r\n        GTLSP: 'vehicle-long-stop',\r\n        GTMPF: 'main-power-disconnected',\r\n        GTMPN: 'main-power-connected',\r\n        GTNMR: 'movement-change',\r\n        GTOBD: 'obd-report',\r\n        GTOPN: 'obd-connected',\r\n        GTOPF: 'obd-disconnected',\r\n        GTPNA: 'power-on',\r\n        GTPNL: 'power-on-location',\r\n        GTPFA: 'power-off',\r\n        GTPDP: 'pdp',\r\n        GTRTL: 'realtime-report',\r\n        GTSOS: 'sos',\r\n        GTSTC: 'battery-charge-stop',\r\n        GTSTP: 'vehicle-stop',\r\n        GTSTR: 'vehicle-start',\r\n        GTSTT: 'motion-status-change',\r\n        GTTEM: 'alarm-temperature',\r\n        GTUPC: 'cota-status',\r\n        GTUPD: 'ota-status',\r\n        GTVER: 'realtime-version',\r\n        GTVGF: 'virtual-ignition-off',\r\n        GTVGL: 'virtual-ignition-change',\r\n        GTVGN: 'virtual-ignition-on',\r\n    };\r\n    if(!descriptions[cmd]) {\r\n        log.warn('no description for ['+cmd+']')\r\n    }\r\n    obj.desc = descriptions[cmd] || cmd;\r\n}\r\n\r\nvar decoders = {\r\n    '690603': {\r\n        DeviceType: 'GV57MG',\r\n        BaseVersion: '700100',\r\n        // GTSTT,690603,861106050014334,,42,0,,,,,,,0302,0720,71AC,01918D15,00,20231005172532,0002$ GV53 match\r\n        //GTSTT: 'cmd|ver|key||temp.status|gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTPDP,690603,861106050014334,,20231006130406,000D$\r\n        //GTPDP: 'cmd|ver|key||ts(timestamp,20060102150405)|seq',\r\n        GTDRM: 'cmd|ver|key||gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTFRI,690603,861106050014334,,,10,1,1,0.0,156,98.1,-75.635422,45.448782,20231006135821,0302,0720,71AC,00755779,00,0.0,00000:00:00,,,100,418000,19,0,5,20231006140041,0014$\r\n        GTFRI: 'cmd|ver|key||externalPowerVcc(int)|temp.reportId(string)||gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||mileage(float)|hourMeter(string)|||battery(int)|temp.status|rssi(int)|ber(int)|satCount(int)|ts(timestamp,20060102150405)|seq'\r\n    },\r\n    '8A0100': {\r\n       DeviceType: 'GV57ARMG',\r\n       BaseVersion: '700100',\r\n       // +RESP:GTDIS,8A0100,867963063046370,ARMOR4,,00,1,0,0.0,137,121.9,-89.697661,39.678759,20231206010616,0310,0260,0000,0000,,0.0,86460,20231207181949,20231207181951,0295$\r\n       GTDIS: 'cmd|ver|key||externalPowerVcc(int)|temp.reportId(string)||gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||mileage(float)|onDuration(int)|stateChangeTs(timestamp,20060102150405)|ts(timestamp,20060102150405)|seq',\r\n       GTEPS: 'cmd|ver|key||externalPowerVcc(int)|temp.reportId(string)||gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||mileage(float)|ts(timestamp,20060102150405)|seq',\r\n       GTFRI: 'cmd|ver|key||externalPowerVcc(int)|temp.reportId(string)||gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||mileage(float)|hourMeter(string)|||battery(int)|temp.status|rssi(int)|ber(int)|satCount(int)|ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTIGF,8A0100,867963063030200,ARMOR4,26,0,0.0,0,198.4,-89.745660,39.592113,20240312213305,0310,0260,A283,01DAF20D,,,0.0,0,20240313010139,019B$\r\n        GTIGF: 'cmd|ver|key||ignitionOnDuration(int)|gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||hourMeter(string)|mileage(float)|externalPowerVcc(int)|ts(timestamp,20060102150405)|seq',\r\n        GTIGN: 'cmd|ver|key||ignitionOffDuration(int)|gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||hourMeter(string)|mileage(float)|externalPowerVcc(int)|ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTVGF,8A0100,867963063046370,ARMOR4,2,98,0,0.0,316,188.4,-89.745775,39.591953,20240205194734,0310,0260,A283,01DAF20B,,,0.0,9126,20240205194736,003E$\r\n        GTVGF: 'cmd|ver|key||temp.virtualIgnitionMode(int)|ignitionOnDuration(int)|gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||hourMeter(string)|mileage(float)|externalPowerVcc(int)|ts(timestamp,20060102150405)|seq',\r\n        GTVGN: 'cmd|ver|key||temp.virtualIgnitionMode(int)|ignitionOffDuration(int)|gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||hourMeter(string)|mileage(float)|externalPowerVcc(int)|ts(timestamp,20060102150405)|seq',\r\n    },\r\n    'DE0114': {\r\n        DeviceType: 'GL501MG',\r\n        // +RESP:GTBPL,C50204,863695050491680,,0,0,1,2,0.0,261,76.3,-75.635375,45.448606,20231009192207,0302,0720,71AC,00755779,14,99,,8,1,0,14.9,20231009192209,0295$\r\n        GTBPL: 'cmd|ver|key||temp.eventState(int)|||gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId|rssi(int)|ber(int)||battery(int)|temp.modeSelection(int)|temp.movementStatus(int)|temperature(float)|ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTBTC,DE0114,865284049298189,GL500M,73,20230425164241,A235$\r\n        GTBTC: 'cmd|ver|key||battery(int)|ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTFRI,DE0114,865284049298189,GL500M,0,0,1,2,0.0,0,108.0,-75.635252,45.448806,20230425140349,0302,0720,AE45,0075577C,13,0,,73,0,0,25.9,20230425140349,A226$\r\n        // +RESP:GTCID,C50300,866833040158401,,89320420000006887051,20240222024909,00FA$\r\n        GTCID: 'cmd|ver|key||iccid|ts(timestamp,20060102150405)|seq',\r\n        //  +RESP:GTCSQ,C50300,863695050506339,,15,99,20240329024707,1266$\r\n        GTCSQ: 'cmd|ver|key||rssi(int)|ber(int)|ts(timestamp,20060102150405)|seq',\r\n        GTDOG: 'cmd|ver|key||temp.reportId(string)|temp.reportType(string)||gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId|rssi(int)|ber(int)||battery(int)|temp.modeSelection(int)|temp.movementStatus(int)|temperature(float)|ts(timestamp,20060102150405)|seq',\r\n        GTFRI: 'cmd|ver|key||temp.reportId(string)|temp.reportType(string)||gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId|rssi(int)|ber(int)||battery(int)|temp.modeSelection(int)|temp.movementStatus(int)|temperature(float)|ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTINF,C50204,863695050506339,,89882280666032702593,18,99,,1,,60,27.4,20231019182730,1,,,,,,,20231020153313,009D$\r\n        GTINF: 'cmd|ver|key||iccid(string)|rssi(int)|ber(int)||||battery(int)|temperature(float)|gps.ts(timestamp,20060102150405)|temp.movementStatus(int)|||||||ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTPFA,DE0301,865284049298189,GL500M,20230927022123,0F6E$\r\n        GTPFA: 'cmd|ver|key||ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTSTC,DE0301,865284049298189,GL500M,100,20230817060224,05D2$\r\n        GTSTC: 'cmd|ver|key||battery(int)|ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTPNA,DE0114,865284049298189,GL500M,1,20230425140237,A220$\r\n        GTPNA: 'cmd|ver|key||temp.powerOnType(int)|ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTNMR,DE0114,865284049298189,GL500M,0,0,1,2,0.0,0,108.0,-75.635252,45.448806,20230425140558,0302,0720,AE45,0075577C,19,0,,73,0,0,26.1,20230425140557,A22D$\r\n        GTNMR: '@GTDOG',\r\n        // +RESP:GTPNL,DE0114,865284049421591,GL500M,0,0,1,0,0.0,0,75.0,-75.635416,45.448852,20230403020337,0302,0720,AE45,0075577C,0,0,,90,0,0,31.1,20230425170024,75D2$\r\n        GTPNL: '@GTDOG',\r\n        // +RESP:GTSOS,DE0114,865284049298189,GL500M,0,0,1,0,0.0,0,108.0,-75.635252,45.448806,20230425140558,0302,0720,AE45,0075577C,14,0,,73,1,1,26.3,20230425164219,A234$\r\n        GTRTL: '@GTDOG',\r\n        GTSOS: 'cmd|ver|key|||||gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId|rssi(int)|ber(int)||battery(int)|temp.modeSelection(int)|temp.movementStatus(int)|temperature(float)|ts(timestamp,20060102150405)|seq',\r\n        GTTEM: '@GTBPL',\r\n        // +RESP:GTUPC,C50300,863695050506339,,001,302,http://bridge-us.tartabit.com/webhook/qlcd/gl521mg/863695050506339.ini,20240216193707,09C3$\r\n        GTUPC: 'cmd|ver|key||commandId(string)|otaCode(int)|url(string)|ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTVER,C50300,863695050506339,,C5,0D03,0107,,BG95-M5,BG95M5LAR02A03,20240329025845,126D$\r\n        GTVER: 'cmd|ver|key||deviceType|fwVersion|hwVersion||modemHwVersion|modemFwVersion|ts(timestamp,20060102150405)|seq',\r\n    },\r\n    'DE0301': {\r\n        DeviceType: 'GL501MG',\r\n        BaseVersion: 'DE0114',\r\n    },\r\n    'C50204': {\r\n        DeviceType: 'GL521MG',\r\n        BaseVersion: 'DE0114',\r\n    },\r\n    'C50300': {\r\n        DeviceType: 'GL521MG',\r\n        BaseVersion: 'DE0114',\r\n    },\r\n    'C80309': {\r\n        DeviceType: 'GV75MG',\r\n        GTBTC: 'cmd|ver|key||gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||ts(timestamp,20060102150405)|seq',\r\n        //+RESP:GTCRA,C80309,861039050297338,GV75M,0,0.0,0,114.1,-75.635443,45.448860,20230929165511,0302,0720,71AC,00755779,00,20230929170821,032C$\r\n        GTCRA: '@GTBTC',\r\n        //+BUFF:GTCRD,C80309,861039050297338,GV75M,1,10,6,00000002007C00000002007E00000002007DFFFE0002007D00000002007D00000002007E00000002007D00000002007E00000002007D00000002007E00000002007D00000002007E00000002007C00000002007D00010002007D00000004007D00000002007D00010002007D00000002007D00000002007E00000004007D00000002007D00060002007C00010002007D00000001007C00000002007E00000002007D00000002007E00000002007D00000002007EFFFE0002007D00000004007E00000002007C00000002007D00000002007E00000002007C00000004007E00000002007C00000002007D00000002007E00010002007D00060002007E00000002007E00000002007D00010002007D00000002007E00000002007D00010004007D00000002007E00000004007E00000004007C00000002007C00000004007D00000002007EFFFE0002008200010002007E00000002007C00000002007D00000004007E00000002008300000002007D00000002007C00000002007DFFFE0002007E00000002007E00000001007D00000002007DFFFE0002007E00000002007E00000004007D00000002007D00000002007E00000004007E00000002007E00000002007C00000004007C00000002007E00000002007D00010002007D00000002007E00000002007D00000002007D00000002007E00000002007CFFFE0002007E00000002007E00000002007D00000002007C00060002007D00000004007E00000004007D00000002007C00000002007D00000004007C00000002007D00000002007E00000002007E00060002007D00010001007D00000002007E,20230928201652,022B$\r\n        GTCRD: 'cmd|ver|key||temp.dataType(int)|frameTotal(int)|frameNumber(int)|temp.data(string)|ts(timestamp,20060102150405)|seq',\r\n        //+RESP:GTCRG,C80309,861039050297338,GV75M,1,10,1,0,0.0,0,114.1,-75.635443,45.448860,20230929165511,2,0,0.0,0,114.1,-75.635443,45.448860,20230929165511,3,0,0.0,0,114.1,-75.635443,45.448860,20230929165511,4,0,0.0,0,114.1,-75.635443,45.448860,20230929165511,5,0,0.0,0,114.1,-75.635443,45.448860,20230929165511,6,0,0.0,0,114.1,-75.635443,45.448860,20230929165511,7,0,0.0,0,114.1,-75.635443,45.448860,20230929165511,8,0,0.0,0,114.1,-75.635443,45.448860,20230929165511,9,0,0.0,0,114.1,-75.635443,45.448860,20230929165511,10,0,0.0,0,114.1,-75.635443,45.448860,20230929165511,20230929170831,036E$\r\n        GTCRG: 'cmd|ver|key||temp.dataType(int)|gps(array,8)|index(int)|accuracy(int)|speed(float)|heading(int)|altitude(float)|longitude(float)|latitude(float)|ts(timestamp,20060102150405)|ts(timestamp,20060102150405)|seq',\r\n        //+RESP:GTFRI,C80309,861039050297338,GV75M,,10,1,2,0.0,0,114.1,-75.635326,45.448882,20230929075458,0302,0720,71AC,01918D15,00,0.0,00000:00:00,,,100,114003,,,,20230929075459,02E4$\r\n        GTFRI: 'cmd|ver|key||externalPowerVcc(int)|temp.reportId(string)||gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||mileage(float)|hourMeter(string)|||battery(int)|temp.status||||ts(timestamp,20060102150405)|seq',\r\n        GTMPF: '@GTBTC',\r\n        GTMPN: '@GTBTC',\r\n        //+RESP:GTPDP,C80309,861039050297338,GV75M,20231010044552,044E$\r\n        GTPDP: 'cmd|ver|key||ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTSTT,C80309,861039050297338,GV75M,11,0,0.0,0,114.1,-75.635426,45.448846,20231002225606,0302,0720,71AC,00755779,00,20231002232554,0449$\r\n        GTSTC: 'cmd|ver|key||temp.status|gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||ts(timestamp,20060102150405)|seq',\r\n        GTSTT: '@GTSTC',\r\n    },\r\n    '5E0100': {\r\n        DeviceType: 'GV500MA',\r\n        GTASC: 'cmd|ver|key|vin||forward.x(int)|forward.y(int)|forward.z(int)|side.x(int)|side.y(int)|side.z(int)|vertical.x(int)|vertical.y(int)|vertical.z(int)|gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||ts(timestamp,20060102150405)|seq',\r\n        GTBPL: 'cmd|ver|key|vin||backupBatteryVcc(float)|gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTBTC,5E0100,861971050041292,,,0,0.0,0,84.1,-75.635328,45.448699,20230422125548,0302,0720,AE45,0075577C,00,20230422130430,13EB$\r\n        GTBTC: 'cmd|ver|key|vin||gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||ts(timestamp,20060102150405)|seq',\r\n        GTDIS: 'cmd|ver|key|vin|||temp.reportId(string)||gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||mileage(float)|ts(timestamp,20060102150405)|seq',\r\n        GTDOG: '@GTDIS',\r\n        // +RESP:GTFRI,5E0100,861971050041292,,,,10,1,4,0.0,0,84.1,-75.635328,45.448699,20230422032313,0302,0720,AE45,0075577C,00,1942.2,,,,,110000,,,,20230422032552,13A9$\r\n        // +RESP:GTFRI,5E0100,861971050041292,YV4BR0PM8J1370127,,,81,1,1,20.3,50,57.6,-75.647592,45.428375,20231010194018,0302,0720,71AC,007EB407,00,9070.2,,,,,220000,860,inf,0,20231010194017,A313$\r\n        GTFRI: 'cmd|ver|key|vin||externalPowerVcc(int)|temp.reportId(string)||gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||mileage(float)|hourMeter(string)||||temp.status|obd.rpm(int)|obd.fuelConsumption(float)|obd.fuelLevelInput(int)|ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTGEO,5E0100,861971050041292,,,,20,1,3,25.8,78,63.1,-75.634335,45.451444,20230422144226,0302,0720,AE45,0075577C,00,1942.5,20230422144227,141E$\r\n        GTGEO: '@GTDIS',\r\n        // +RESP:GTIDF,5E0100,861971050041292,,,11,135,0,,,,,,,0302,0720,AE45,0075577C,00,1942.2,20230422025529,139F$\r\n        GTIDF: 'cmd|ver|key|vin||temp.status(string)|duration(int)|gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||mileage(float)|ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTIDN,5E0100,861971050041292,,,,,0,0.0,0,63.1,-75.635328,45.448781,20230422130735,0302,0720,AE45,0075577C,00,1942.1,20230422130736,13FB$\r\n        GTIDN: 'cmd|ver|key|vin||||gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||mileage(float)|ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTIGL,5E0100,861971050041292,YV4BR0PM8J1370127,,,00,1,2,31.6,163,73.9,-75.634445,45.449472,20230422165240,0302,0720,B039,007DF081,00,1951.6,20230422165240,147C$\r\n        GTIGF: 'cmd|ver|key|vin||ignitionOnDuration(int)|gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||hourMeter(string)|mileage(float)|ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTIGL,5E0100,861971050041292,YV4BR0PM8J1370127,,,00,1,2,31.6,163,73.9,-75.634445,45.449472,20230422165240,0302,0720,B039,007DF081,00,1951.6,20230422165240,147C$\r\n        GTIGL: '@GTDIS',\r\n        GTIGN: 'cmd|ver|key|vin||ignitionOffDuration(int)|gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||hourMeter(string)|mileage(float)|ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTINF,5E0100,861971050041292,,,11,89883070000011234083,14,99,1,4958,,0.00,0,2,,,20230422040826,,,,,,+0000,0,20230422042201,13B0$\r\n        GTINF: 'cmd|ver|key|vin||temp.status(string)|iccid(string)|rssi(int)|ber(int)|temp.externalPowerSupply(int)|temp.externalPowerVoltage(int)||backupBatteryVoltage(float)|temp.charging(int)|temp.ledOn(int)|||gps.ts(timestamp,20060102150405)||||||tzOffset(string)|tzIsDst(int)|ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTJES,5E0100,861971050041292,YV4BR0PM8J1370127,,10007F,0,972,909,19,17,39,35,0,49.9,158,68.5,-75.641545,45.431563,20230422145254,20230422145255,1445$\r\n        // +RESP:GTJES,5E0100,861971050041292,YV4BR0PM8J1370127,,10007F,0,1150,1150,30,30,47,47,0,25.3,61,86.7,-75.631189,45.446162,20230423034639,20230423034640,180A$\r\n        // GTJES can be customized based on the mask, so this command may need to be updated based on your config\r\n        GTJES: 'cmd|ver|key|vin||temp.mask(string)|summary.fuelConsumption(int)|summary.rpmMax(int)|summary.rpmAvg(int)|summary.throttleMax(int)|summary.throttleAvg(int)|summary.engineLoadMax(int)|summary.engineLoadAvg(int)|summary.mileage(int)|gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||mileage(float)|ts(timestamp,20060102150405)|seq',\r\n        GTMPF: 'cmd|ver|key|vin||gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTMPF,5E0100,861971050041292,,,0,0.0,0,84.1,-75.635328,45.448699,20230422125548,0302,0720,AE45,0075577C,00,20230422130332,13E6$\r\n        GTMPN: '@GTMPF',\r\n        // +RESP:GTOBD,5E0100,861971050041292,,,0,11FFFF,,1,12298,,,,,,,,,,,,,,00,0,0.0,0,63.1,-75.635328,45.448781,20230422130731,20230422130732,13F8$\r\n        // +RESP:GTOBD,5E0100,861971050041292,YV4BR0PM8J1370127,,0,71FFFF,YV4BR0PM8J1370127,1,12804,983A81E0,1595,43,74,8.9,28096,0,0,0,,19,23,9,33,0,0.0,64,93.9,-75.635893,45.451264,20230424013806,0302,0720,B039,007DF081,00,2002.8,20230424013806,1A2E$\r\n        GTOBD: 'cmd|ver|key|vin||temp.reportId(string)|temp.mask(string)|obd.vin(string)|obd.connection(bool)|obd.powerVoltage(int)|obd.supportedPids(string)|obd.rpm(int)|obd.speed(int)|obd.engineTemp(int)|obd.fuelConsumption(float)|obd.dtcClearedDistance(int)|obd.milActivatedDistance(int)|obd.milStatus(int)|obd.dtcCount(int)|temp.dtcs(string)|obd.throttle(int)|obd.engineLoad(int)|obd.fuelLevelInput(int)|obd.protocol(string)|gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||mileage(float)|ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTOER,5E0100,861971050041292,,,228,00,,0,0.0,0,84.1,-75.635328,45.448699,20230422125548,0302,0720,AE45,0075577C,00,20230422130528,13ED$\r\n        GTOER: 'cmd|ver|key|vin||obd.code(string)|obd.protocol(string)||gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTOPN,5E0100,861971050041292,,,0,0.0,0,84.1,-75.635328,45.448699,20230422125548,0302,0720,AE45,0075577C,00,20230422130432,13EC$\r\n        GTOPN: '@GTMPF',\r\n        GTOPF: '@GTMPF',\r\n        // +RESP:GTPDP,5E0100,861971050041292,YV4BR0PM8J1370127,,20230818130031,F589$\r\n        GTPDP: 'cmd|ver|key|vin||ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTPFA,5E0100,861971050041292,YV4BR0PM8J1370127,,20230427020031,2BD6$\r\n        GTPFA: '@GTPDP',\r\n        // +RESP:GTPNA,5E0100,861971050041292,YV4BR0PM8J1370127,,20230427020041,2BD7$\r\n        // +RESP:GTPNA,5E0100,861971050041292,YV4BR0PM8J1370127,,20230815020048,E79B$\r\n        GTPNA: '@GTPDP',\r\n        GTPNL: '@GTDIS',\r\n        GTRTL: '@GTDIS',\r\n        // +RESP:GTSTC,5E0100,861971050041292,,,,0,,,,,,,0302,0720,AE45,0075577C,00,20230422025534,13A1$\r\n        GTSTC: 'cmd|ver|key|vin||temp.status|gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTSTP,5E0100,861971050041292,,,,,0,0.0,0,63.1,-75.635328,45.448781,20230422130735,0302,0720,AE45,0075577C,00,1942.1,20230422130736,13F9$\r\n        GTSTP: '@GTIDN',\r\n        // +RESP:GTSTR,5E0100,861971050041292,,,,,0,0.0,0,84.1,-75.635328,45.448699,20230422125548,0302,0720,AE45,0075577C,00,1942.1,20230422130532,13EE$\r\n        GTSTR: '@GTIDN',\r\n        // +RESP:GTSTT,5E0100,861971050041292,,,11,0,,,,,,,0302,0720,AE45,0075577C,00,20230422025529,139E$\r\n        GTSTT: '@GTSTC',\r\n        GTUPC: 'cmd|ver|key|vin||commandId(string)|otaCode(int)|url(string)|ts(timestamp,20060102150405)|seq',\r\n        GTVER: 'cmd|ver|key|vin||deviceType|fwVersion|hwVersion|ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTVGF,5E0100,861971050041292,,,00,4,363,0,0.0,0,63.1,-75.635328,45.448781,20230422130950,0302,0720,AE45,0075577C,00,,1942.1,20230422130951,1404$\r\n        GTVGF: 'cmd|ver|key|vin||temp.virtualIgnitionMode(int)|ignitionOnDuration(int)|gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||hourMeter(string)|mileage(float)|ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTVGL,5E0100,861971050041292,YV4BR0PM8J1370127,,,41,1,1,0.0,66,87.4,-75.636186,45.444622,20230819020120,0302,0720,71AC,00755779,00,7549.8,20230819020120,FF70$\r\n        GTVGL: '@GTDIS',\r\n        // +RESP:GTVGN,5E0100,861971050041292,YV4BR0PM8J1370127,,00,4,0,0,25.0,330,75.3,-75.634355,45.449680,20230828140917,0302,0720,71AC,00755779,00,,7782.2,20230828140917,1852$\r\n        GTVGN: 'cmd|ver|key|vin|||temp.virtualIgnitionMode(int)|ignitionOffDuration(int)|gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||hourMeter(string)|mileage(float)|ts(timestamp,20060102150405)|seq',\r\n    },\r\n    'FE170C': {\r\n        DeviceType: 'GV50MA',\r\n        // +RESP:GTASC,FE170E,015700000724326,,1,0,98,19,4,19,-97,-99,1,-4,1,,,,-121.281942,37.798414,20231106183520,,,,,,,14A0$\r\n        GTASC: 'cmd|ver|key||calibrationFlag(int)|forward.x(int)|forward.y(int)|forward.z(int)|side.x(int)|side.y(int)|side.z(int)|vertical.x(int)|vertical.y(int)|vertical.z(int)|gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||ts(timestamp,20060102150405)|seq',\r\n        //+BUFF:GTDOG,FE170F,015700000474856,,,01,1,0,,,,-85.491462,32.602870,20230302194917,,,,,,,,2927$\r\n        GTDOG: 'cmd|ver|key|||temp.reportId(string)||gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||mileage(float)|ts(timestamp,20060102150405)|seq',\r\n        //+RESP:GTFRI,FE170F,015700000474856,,,60,1,0,,,,-85.491462,32.602870,20230302194917,,,,,,,00094:48:24,94,410000,,,,2C53$\r\n        GTFRI: 'cmd|ver|key||externalPowerVcc(int)|temp.reportId(string)||gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||mileage(float)|hourMeter(string)|battery(int)|temp.status|||ts(timestamp,20060102150405)|seq',\r\n        //+BUFF:GTVGF,FE170F,015700000474856,,2,843,0,,,,-85.491462,32.602870,20230302194917,,,,,,00094:48:24,,,2999$\r\n        GTVGF: 'cmd|ver|key||temp.virtualIgnitionMode(int)|ignitionOnDuration(int)|gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||hourMeter(string)|mileage(float)|ts(timestamp,20060102150405)|seq',\r\n        //+BUFF:GTVGN,FE170F,015700000474856,,2,34607,0,,,,-85.491462,32.602870,20230302194917,,,,,,00094:34:22,,,298A$\r\n        GTVGN: 'cmd|ver|key||temp.virtualIgnitionMode(int)|ignitionOffDuration(int)|gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||hourMeter(string)|mileage(float)|ts(timestamp,20060102150405)|seq',\r\n        GTIGF: 'cmd|ver|key||ignitionOnDuration(int)|gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||hourMeter(string)|mileage(float)|ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTIGN,FE170C,868446032127082,,9119,0,,,,-90.173554,35.132168,20230828163850,,,,,,00700:10:53,,,0A5A$\r\n        GTIGN: 'cmd|ver|key||ignitionOffDuration(int)|gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||hourMeter(string)|mileage(float)|ts(timestamp,20060102150405)|seq',\r\n    },\r\n    'FE170E': {\r\n        DeviceType: 'GV50MA',\r\n        BaseVersion: 'FE170C',\r\n    },\r\n    'FE170F': {\r\n        DeviceType: 'GV50MA',\r\n        BaseVersion: 'FE170C',\r\n    },\r\n    '700100': {\r\n        DeviceType: 'GV53MG',\r\n        // +RESP:GTBPL,700201,865918060729107,GV53MG,3.68,0,0.0,0,207.1,-88.932710,39.868450,20230418164952,0310,0260,A2E4,005EEC0B,,20230418165133,00C2$\r\n        GTBPL: 'cmd|ver|key||backupBatteryVcc(int)|gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTBTC,700201,865918060799480,,0,0.0,119,196.3,-89.697145,39.678615,20230407201452,0310,0410,4008,03483D09,,20230407201454,089B$\r\n        GTBTC: 'cmd|ver|key||gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||ts(timestamp,20060102150405)|seq',\r\n        //+BUFF:GTCID,700100,868487004368429,GV53MG,89882280666032702577,20230420194156,00B6$\r\n        GTCID: 'cmd|ver|key||iccid|ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTCRA,700201,865918060730212,ARMOR3,2,0,0.0,51,211.6,-88.932756,39.868401,20240209222933,0310,0410,4005,04328E08,,20240209222935,02EA$\r\n        GTCRA: 'cmd|ver|key||crashCounter(int)|gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||ts(timestamp,20060102150405)|seq',\r\n        GTCRD: 'cmd|ver|key||crashCounter(int),temp.dataType(int)|frameTotal(int)|frameNumber(int)|temp.data(string)|ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTCRG,700201,865918060730212,ARMOR3,2,1,7,1,0.0,51,211.6,-88.932756,39.868401,20240209222934,1,0.0,51,211.6,-88.932756,39.868401,20240209222935,1,0.0,51,211.6,-88.932756,39.868401,20240209222936,1,0.0,51,211.6,-88.932756,39.868401,20240209222937,1,0.0,51,211.6,-88.932756,39.868401,20240209222938,1,0.0,51,211.6,-88.932756,39.868401,20240209222939,1,0.0,51,211.6,-88.932756,39.868401,20240209222940,20240209222942,02F8$\r\n        GTCRG: 'cmd|ver|key||crashCounter(int)|temp.dataType(int)|gpsRecords(array,7)|accuracy(int)|speed(float)|heading(int)|altitude(float)|longitude(float)|latitude(float)|ts(timestamp,20060102150405)|ts(timestamp,20060102150405)|seq',\r\n        GTCSQ: 'cmd|ver|key||rssi(int)|fer(int)|ts(timestamp,20060102150405)|seq',\r\n        GTDOG: 'cmd|ver|key|||temp.reportId(string)||gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||mileage(float)|ts(timestamp,20060102150405)|seq',\r\n        //+RESP:GTDIS,700201,865918060755169,GV53MG,,10,1,0,0.0,0,192.0,-88.932684,39.868582,20230927182954,0310,0260,A2E4,005EEC0B,,0.0,20230927192331,8288$\r\n        GTDIS: '@GTDOG',\r\n        // +RESP:GTFRI,700201,865918060799480,,,60,1,1,0.0,231,189.1,-89.696933,39.678564,20230411145359,0310,0410,4008,03483D09,,0.0,,100,110000,,,20230411145400,\r\n        GTFRI: 'cmd|ver|key||externalPowerVcc(int)|temp.reportId(string)||gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||mileage(float)|hourMeter(string)|battery(int)|temp.status|||ts(timestamp,20060102150405)|seq',\r\n        GTIDF: 'cmd|ver|key||temp.status|idleDuration(int)|gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||mileage(float)|ts(timestamp,20060102150405)|seq',\r\n        GTIDN: 'cmd|ver|key||||gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||mileage(float)|ts(timestamp,20060102150405)|seq',\r\n        GTIGF: 'cmd|ver|key||ignitionOnDuration(int)|gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||hourMeter(string)|mileage(float)|ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTIGF,700201,865918060767412,GV53MG,46,0,0.0,0,94.8,-155.988072,19.818914,20270104012743,0310,0260,B800,06375717,,,0.0,20231030141234,0168$\r\n        GTIGF: 'cmd|ver|key||ignitionOnDuration(int)|gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||hourMeter(string)|mileage(float)|ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTIGL,8A0100,867963063030200,ARMOR4,,00,1,0,0.0,0,198.4,-89.745660,39.592113,20240312213305,0310,0260,A283,01DAF20D,,0.0,20240313010313,019F$\r\n        GTIGL: '@GTDOG',\r\n        //+RESP:GTIGN,700201,865918060816029,GV53MG,2086,0,0.0,0,90.4,-155.988024,19.818907,20270104011808,0310,0260,A2E4,005EEC0B,,00000:00:50,0.0,20230927193910,18D8$\r\n        GTIGN: 'cmd|ver|key||ignitionOffDuration(int)|gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||hourMeter(string)|mileage(float)|ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTINF,700100,868487004367421,,11,89882280666032702585,18,0,1,11961,,3.76,1,0,2,-77,20231004053301,0,-104,54,00,00,-13,,20231020142031,B086$\r\n        GTINF: 'cmd|ver|key||temp.status(string)|iccid(string)|rssi(int)|ber(int)|temp.externalPowerSupply(int)|temp.externalPowerVoltage(int)||backupBatteryVoltage(float)|temp.charging(int)|temp.ledOn(int)|||gps.ts(timestamp,20060102150405)||||||tzOffset(string)|tzIsDst(int)|ts(timestamp,20060102150405)|seq',\r\n        GTMPN: '@GTBTC',\r\n        // +RESP:GTMPF,700201,865918060799480,,0,0.0,119,196.3,-89.697145,39.678615,20230407201514,0310,0410,4008,03483D09,,20230407201516,089C$\r\n        GTMPF: '@GTBTC',\r\n        // +RESP:GTPDP,700201,865918060799480,,20230403145628,07C7$\r\n        GTPDP: 'cmd|ver|key||ts(timestamp,20060102150405)|seq',\r\n        GTPFA: '@GTPDP',\r\n        // +RESP:GTPNA,700201,865918060799480,,20230330121416,0782$\r\n        GTPNA: '@GTPDP',\r\n        GTPNL: '@GTDOG',\r\n        // +BUFF:GTLGN,700201,865918060428684,GV53MG,0214,0104,0,,7,20230417183126,00B9$\r\n        GTLGN: 'cmd|ver|key||fwVersion|hwVersion|||rebootReason|ts(timestamp,20060102150405)|seq',\r\n        GTRTL: '@GTDOG',\r\n        // +RESP:GTSTC,700201,865918060799480,,,0,0.0,119,196.3,-89.697145,39.678615,20230407201524,0310,0410,4008,03483D09,,20230407201526,089D$\r\n        GTSTC: 'cmd|ver|key||temp.status|gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTSTT,700201,865918060799480,,11,0,0.0,220,198.0,-89.697117,39.678616,20230403144125,0310,0410,4008,03483D09,,20230403144126,07C5$\r\n        GTSTT: '@GTSTC',\r\n        GTUPC: 'cmd|ver|key||commandId(string)|otaCode(int)|url(string)|ts(timestamp,20060102150405)|seq',\r\n        GTUPD: 'cmd|ver|key||otaCode(int)||ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTVER,8A0100,867963063029905,ARMOR4,GV57ARMG,010A,0101,0103,021C,20231211183020,0497$\r\n        // +RESP:GTVER,700100,868487004367421,,GV53MG,011E,0103,20240411032536,0CBC$\r\n        GTVER: 'cmd|ver|key||deviceType|fwVersion|hwVersion|modemHwVersion|modemFwVersion|ts(timestamp,20060102150405)|seq',\r\n        // +RESP:GTVGF,700201,865918060799480,,2,191,0,0.0,220,183.7,-89.696954,39.678708,20230403152236,0310,0410,4008,03483D09,,,0.0,20230403152237,07CC$\r\n        GTVGF: 'cmd|ver|key||temp.virtualIgnitionMode(int)|ignitionOnDuration(int)|gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||hourMeter(string)|mileage(float)|ts(timestamp,20060102150405)|seq',\r\n        GTVGL: '@GTDOG',\r\n        // +BUFF:GTVGN,700201,865918060799480,,2,1764,0,0.0,146,199.8,-89.697048,39.678506,20230329194120,0310,0410,4008,03483D09,,,0.0,20230329201045,0755$\r\n        GTVGN: 'cmd|ver|key||temp.virtualIgnitionMode(int)|ignitionOffDuration(int)|gps.accuracy(int)|gps.speed(float)|gps.heading(int)|gps.altitude(float)|gps.longitude(float)|gps.latitude(float)|gps.ts(timestamp,20060102150405)|net.mcc|net.mnc|net.lac|net.cellId||hourMeter(string)|mileage(float)|ts(timestamp,20060102150405)|seq',\r\n    },\r\n    '700201': {\r\n        DeviceType: 'GV53MG',\r\n        BaseVersion: '700100'\r\n    },\r\n    '700600': {\r\n        DeviceType: 'GV53MG',\r\n        BaseVersion: '700100',\r\n        GTVER: 'cmd|ver|key||deviceType|fwVersion|hwVersion|modemHwVersion|modemFwVersion|ts(timestamp,20060102150405)|seq',\r\n    }\r\n}\r\n\r\nif (!decoders[ver]) {\r\n    log.warn('no version for [' + ver + ']', event.data)\r\n    if(global.values.queclinkAlerts) {\r\n       alert.raise('queclink-alerts','queclink-no-version-'+ver,'no version for ['+ver+']','medium','no version for ['+ver+']',{tags:{type: 'queclink-protocol'}})\r\n    }\r\n    trigger.exit()\r\n}\r\nvar decoder = decoders[ver][cmd]\r\nif (!decoder) {\r\n    if(decoders[ver].BaseVersion) {\r\n      decoder = decoders[decoders[ver].BaseVersion][cmd]\r\n    }\r\n    if(!decoder) {\r\n      log.warn('no decoder for [' + cmd + ']', event.data)\r\n      if(global.values.queclinkAlerts) {\r\n        alert.raise('queclink-alerts','queclink-no-decoder-'+ver+'-'+cmd,'no decoder for ['+ver+']['+cmd+']','medium','no decoder for ['+ver+']['+cmd+']',{tags:{type: 'queclink-protocol'}})\r\n      }\r\n      trigger.exit()\r\n    } else if(decoder[0]=='@') {\r\n        decoder = decoders[decoders[ver].BaseVersion][decoder.substring(1)]\r\n    }\r\n} else if(decoder[0]=='@') {\r\n    decoder = decoders[ver][decoder.substring(1)]\r\n}\r\n\r\nobj = convert.delimitedStringToObject(event.data.payload, decoder, ',') \r\nif (obj.temp) {\r\n  if(obj.temp.status) parseStatus(obj.temp.status)\r\n  if(obj.temp.powerOnType) parsePowerOnType(obj.temp.powerOnType)\r\n  if(obj.temp.modeSelection != null) obj.modeSelection = obj.temp.modeSelection == '1' ? 'continuous':'PSM'\r\n  if(obj.temp.movementStatus != null) obj.motion = obj.temp.movementStatus == '1'\r\n}\r\nif (obj.rssi) obj.rssi = parseRssi(obj.rssi)\r\nif (obj.externalPowerVcc) obj.externalPowerVcc = obj.externalPowerVcc / 1000.0\r\nif(obj.obd && isNaN(obj.obd.fuelConsumption)) {\r\n    obj.obd.fuelConsumption = 0\r\n}\r\nsetDesc()\r\n\r\nvar details = {}\r\nvar tags = {\r\n    type: decoders[ver]['DeviceType']\r\n}\r\nvar updateNeeded = false\r\n\r\nswitch (cmd) {\r\n    case 'GTCRD':\r\n        if(obj.temp.dataType==0) {\r\n            obj.dataType = 'before-crash'\r\n        } else {\r\n            obj.dataType = 'after-crash'\r\n        }\r\n        var bin = convert.hexToBin(obj.temp.data)\r\n        var reader = convert.binReader(bin)\r\n        var data = []\r\n        for(var i=0;i<obj.temp.data.length;i+=12) {\r\n            var point = [reader.readInt16(),reader.readInt16(),reader.readInt16()]\r\n            data.push(point)\r\n        }\r\n        obj.data = data\r\n        break\r\n    case 'GTCRG':\r\n        if(obj.temp.dataType==0) {\r\n            obj.dataType = 'before-crash'\r\n        } else {\r\n            obj.dataType = 'after-crash'\r\n        }\r\n        break\r\n    case 'GTDIS':\r\n        obj.inputNumber = obj.temp.reportId.charAt(0)\r\n        obj.inputValue = obj.temp.reportId.charAt(1) === '1' ? true : false\r\n        break\r\n    case 'GTFRI':\r\n        switch(ver) {\r\n            case 'DE0114':\r\n                break\r\n            default:\r\n                switch (obj.temp.reportId.charAt(0)) {\r\n                    case '1':\r\n                        obj.reportId = 'time'\r\n                        break\r\n                    case '2':\r\n                        obj.reportId = 'distance'\r\n                        break\r\n                    case '3':\r\n                        obj.reportId = 'mileage'\r\n                        break\r\n                    case '4':\r\n                        obj.reportId = 'time+mileage'\r\n                        break\r\n                    case '5':\r\n                        obj.reportId = 'time~mileage'\r\n                        break\r\n                    case '6':\r\n                        obj.reportId = 'emergency'\r\n                        break\r\n                    case '8':\r\n                        obj.reportId = 'time~mileage~corner'\r\n                        break\r\n                }\r\n                switch (obj.temp.reportId.charAt(1)) {\r\n                    case '1':\r\n                        obj.reportType = 'normal'\r\n                        break\r\n                    case '4':\r\n                        obj.reportType = 'mileage'\r\n                        break\r\n                }\r\n                break\r\n        }\r\n    case 'GTCID':\r\n        //endpoint.update(endpointKey,{statusDetails:{iccid: obj.iccid}})\r\n        break\r\n    case 'GTGEO':\r\n        obj.geofenceId = obj.temp.reportId.charAt(0)\r\n        obj.desc += obj.temp.reportId.charAt(1)=='1'?'-enter':'-exit'\r\n        break\r\n    case 'GTINF':\r\n        if(obj.temp.externalPowerSupply>0) {\r\n            obj.externalPowerSupply = true\r\n        } else {\r\n            obj.externalPowerSupply = false\r\n        }\r\n        if(obj.temp.charging>0) {\r\n            obj.charging = true\r\n        } else {\r\n            obj.charging = false\r\n        }\r\n        if(obj.temp.ledOn>0) {\r\n            obj.ledOn = true\r\n        } else {\r\n            obj.ledOn = false\r\n        }\r\n        if(obj.temp.qcsq) {\r\n            switch(obj.temp.qcsq) {\r\n                case 0:\r\n                    obj.qcsq = 'no-service'\r\n                    break\r\n                case 1:\r\n                    obj.qcsq = 'egprs'\r\n                    break\r\n                case 2:\r\n                    obj.qcsq = 'lte-catm'\r\n                    break\r\n                case 3:\r\n                    obj.qcsq = 'lte-nb2'\r\n                    break\r\n            }\r\n        }\r\n        break\r\n    case 'GTNMR':\r\n        obj.reportType = obj.temp.reportType == '1'? 'rest-to-motion' : 'motion-to-rest'\r\n        break\r\n    case 'GTVGL':\r\n    case 'GTIGL':\r\n        if (obj.temp.reportId.charAt(1) == '0') {\r\n            obj.ignition = false\r\n        } else {\r\n            obj.ignition = true\r\n        }\r\n        break\r\n    case 'GTTEM':\r\n        var state = 'unknown'\r\n        switch(obj.temp.eventState) {\r\n            case 1:\r\n                state = 'low'\r\n                break\r\n            case 2:\r\n                state = 'high'\r\n                break\r\n            case 3:\r\n                state = 'inside-range'\r\n                break\r\n            case 4:\r\n                state = 'outside-range'\r\n                break\r\n        }\r\n        obj.alarm = { temperature: state}\r\n        break\r\n    case 'GTUPC':\r\n        obj.otaStatus =  parseUpdateCode(obj.otaCode)\r\n    case 'GTUPD':\r\n        obj.otaStatus = parseUpdateCode(obj.otaCode)\r\n        break\r\n    case 'GTVER':\r\n        tags['firmware'] = obj.fwVersion\r\n        tags['firmwareModem'] = obj.modemFwVersion\r\n        updateNeeded = true\r\n        break\r\n    case 'GTVGF':\r\n        obj.ignition = false\r\n        break\r\n    case 'GTVGN':\r\n        obj.ignition = true\r\n        break\r\n}\r\n\r\nif(obj.net) {\r\n    var netData = convert.mccmnc(obj.net.mcc,obj.net.mnc)\r\n    if(netData) {\r\n        tags.country = netData.country\r\n        tags.operator = netData.operator\r\n    }\r\n}\r\n\r\nif(obj.iccid) {\r\n    details.iccid = obj.iccid\r\n    updateNeeded = true\r\n}\r\nif(obj.vin) {\r\n    details.vin = obj.vin\r\n    updateNeeded = true\r\n}\r\n\r\nif(updateNeeded) endpoint.update(event.endpoint.key,{statusDetails: details})\r\n\r\nendpoint.updateTags(event.endpoint.key,tags)\r\n\r\nif(!obj.ts) {\r\n    obj.ts = event.ts\r\n}\r\nvar repTs = date.parse(obj.ts, 'rfc3339')\r\nvar evtTs = date.parse(event.ts, 'rfc3339')\r\nif (obj.gps && obj.gps.ts) {\r\n    var gpsTs = date.parse(obj.gps.ts, 'rfc3339')\r\n    obj.gps.age = (repTs - gpsTs) / 1000\r\n}\r\nobj.age = (evtTs - repTs) / 1000\r\n\r\nobj.cmd = cmd\r\nobj.buffered = (event.data.payload.substring(1, 5) == 'BUFF')\r\nobj.raw = event.data.payload\r\nobj.deviceType = decoders[ver].DeviceType\r\nobj.remoteAddr = event.data.remoteAddr\r\n\r\ndelete obj.temp\r\ndelete obj.ignored\r\n\r\nif (global.values.queclinkDebug) {\r\n    log.trace('['+event.endpoint.key+'] ' + cmd + ' received ['+obj.seq+']', obj)\r\n}\r\n\r\nif (Object.keys(obj).length != 0) {\r\n    exec.now('queclink-data', obj)\r\n}\r\n",
      "filterServiceId": "{{.svc_queclink-listener}}",
      "filterType": "udp-receive",
      "id": "645e944c3855f68ba756704b",
      "name": "Queclink - Receiver",
      "type": "script"
    },
    {
      "def": "\r\n    var lastComma = event.data.payload.lastIndexOf(',')\r\n\r\n    var id = event.data.payload.substr(lastComma + 1, 4)\r\n    var cmd = event.data.payload.substring(3, 8)\r\n    \r\n    var ack = trigger.wait('queclink:'+event.endpoint.key+':'+id,20)\r\n\r\n    if(ack) {\r\n        log.trace('received queued reply ['+JSON.stringify(ack)+'] from ['+event.endpoint.key+'] for ['+event.data.payload+']')\r\n    } else {\r\n        log.trace('timed out waiting for queued reply from ['+event.endpoint.key+'] for ['+event.data.payload+']')\r\n        alert.raise('queclink-alerts',event.endpoint.key+'-noack-'+cmd.toLowerCase(),event.endpoint.name+ ' failed to ack: '+cmd,'medium',event.endpoint.name+ 'failed to ack: '+cmd,{endpointId: event.endpoint.id, context: {command:event.data.payload}, tags:{type:'queclink-noack'}})\r\n    }\r\n",
      "filterServiceId": "{{.svc_queclink-listener}}",
      "filterType": "udp-queued-packet-flushed",
      "id": "6618236ed182fc7d4058016b",
      "name": "Queclink - Receive Queue Acks",
      "type": "script"
    },
    {
      "def": "\r\nif(event.data.payload.startsWith('EXPT:')) {\r\n    log.warn('error communicting with device',event.data.payload)\r\n    trigger.exit()\r\n}\r\n\r\nvar firstComma = event.data.payload.indexOf(',')\r\nvar secondComma = event.data.payload.indexOf(',', firstComma+1)\r\n\r\nvar ver = event.data.payload.substring(firstComma+1,secondComma)\r\nvar cmd = event.data.payload.substring(6,firstComma)\r\n\r\nreport.publish('queclink-sampler',ver+'-'+cmd,event.ts,{values:{version: ver, command: cmd, sample: event.data.payload}})\r\n",
      "filterServiceId": "{{.svc_queclink-listener}}",
      "filterType": "udp-receive",
      "id": "64da92706c3caaf84077528f",
      "name": "Queclink - Message Sampler",
      "type": "script"
    },
    {
      "def": "\r\nfunction send_raw_command(key, password, command, params, queueOnFailure) {\r\n    var id = random.hex(4)\r\n\r\n    if(params.endsWith('$')) {\r\n        var lastComma = params.lastIndexOf(',')\r\n        params = params.substr(0,lastComma+1)\r\n        //log.trace('trimmed command to: '+command)\r\n    }\r\n\r\n    var fullCommand = 'AT+'+command+'='+password+','+params + id + '$'\r\n    log.trace('sent command ['+fullCommand+'] to ['+key+']')\r\n\r\n    udp.send('',key,fullCommand)\r\n\r\n    var ack = trigger.wait('queclink:'+key+':'+id,10)\r\n\r\n    if(ack) {\r\n        log.trace('received reply ['+JSON.stringify(ack)+'] from ['+key+'] for ['+fullCommand+']')\r\n        return {success: true}\r\n    } else {\r\n        log.trace('timed out waiting for reply from ['+key+'] for ['+fullCommand+']')\r\n        if(queueOnFailure) {\r\n            log.trace('queued', ack)\r\n            udp.queue('',key,command,fullCommand,86400)\r\n        }\r\n        return {success: false, error: 'timeout'}\r\n    }\r\n}\r\n",
      "filterType": "library",
      "id": "645e944c3855f68ba756704e",
      "name": "Queclink - Commands",
      "type": "script"
    },
    {
      "def": "\r\nif(event.endpoint==null) {\r\n    log.warn('no endpoint defined',event.data)\r\n    trigger.reply({error:'no endpoint defined'})\r\n    endpoint.search('key==\"'+event.data.data.key+'\"',searchCallback)\r\n}\r\n\r\nfunction send_raw_command(key, password, command, params, queueOnFailure) {\r\n    var id = random.hex(4)\r\n\r\n    if(params.endsWith('$')) {\r\n        var lastComma = params.lastIndexOf(',')\r\n        params = params.substr(0,lastComma+1)\r\n        //log.trace('trimmed command to: '+command)\r\n    }\r\n\r\n    var fullCommand = 'AT+'+command+'='+password+','+params + id + '$'\r\n    log.trace('sent command ['+fullCommand+'] to ['+key+']')\r\n\r\n    udp.send('',key,fullCommand)\r\n\r\n    var ack = trigger.wait('queclink:'+key+':'+id,10)\r\n\r\n    if(ack) {\r\n        log.trace('received reply ['+JSON.stringify(ack)+'] from ['+key+'] for ['+fullCommand+']')\r\n        return {success: true}\r\n    } else {\r\n        log.trace('timed out waiting for reply from ['+key+'] for ['+fullCommand+']')\r\n        if(queueOnFailure) {\r\n            udp.queue('',key,command+':'+event.data.data.command,fullCommand,86400)\r\n        }\r\n        return {success: false, error: 'timeout'}\r\n    }\r\n}\r\n\r\nif(!event.endpoint.tags.type) {\r\n    log.warn('no deviceType tag on endpoint',event.data)\r\n    trigger.reply({error:'no type tag on endpoint'})\r\n}\r\n\r\nvar password = ''\r\nif(event.endpoint.statusDetails && event.endpoint.statusDetails.password) {\r\n    password = event.endpoint.statusDetails.password\r\n} else if(global.values.queclinkPasswords) {\r\n    if(global.values.queclinkPasswords[event.endpoint.tags.type]) {\r\n        password = global.values.queclinkPasswords[event.endpoint.tags.type]\r\n    }\r\n}\r\nif(password.length==0) {\r\n    log.warn('no password available',event.data)\r\n    trigger.reply({error:'no password available'})\r\n}\r\n\r\nswitch(event.data.data.command) {\r\n    case 'rtl':\r\n        send_raw_command(event.endpoint.key,password, 'GTRTO', '1,,0,,,,FFFF$', true)\r\n        break\r\n    case 'reboot':\r\n        send_raw_command(event.endpoint.key,password, 'GTRTO', '3,,0,,,,FFFF$', true)\r\n        break\r\n    case 'poweroff':\r\n        send_raw_command(event.endpoint.key,password, 'GTRTO', '5,,0,,,,FFFF$', true)\r\n        break\r\n    case 'cid':\r\n        send_raw_command(event.endpoint.key,password, 'GTRTO', '6,,0,,,,FFFF$', true)\r\n        break\r\n    case 'csq':\r\n        send_raw_command(event.endpoint.key,password, 'GTRTO', '7,,0,,,,FFFF$', true)\r\n        break\r\n    case 'ver':\r\n        send_raw_command(event.endpoint.key,password, 'GTRTO', '8,,0,,,,FFFF$', true)\r\n        break\r\n    case 'inf':\r\n        send_raw_command(event.endpoint.key,password, 'GTRTO', 'F,,0,,,,FFFF$', true)\r\n        break\r\n    case 'disable-upc':\r\n        send_raw_command(event.endpoint.key,password, 'GTUPC', '0,10,0,0,0,,0,,,,FFFF$', true)\r\n        break\r\n    default:\r\n        log.warn('bad command',event.data)\r\n        trigger.reply({error:'bad command ['+event.data.data.command+']'})\r\n        break\r\n}\r\n",
      "filterGeneric": "queclink-rto-command",
      "filterType": "generic",
      "genericSample": "{\n  \"form\": true,\n   \"title\": \"Send RTO command\",\n   \"desc\": \"Send an RTO command to the device\",\n   \"icon\": \"mdi-camera-control\",\n   \"endpoint\":{ \"required\": true },\n   \"fields\": [\n      { \"name\": \"Command\", \"key\": \"command\", \"type\": \"option\", \"options\": [ \"rtl\", \"reboot\", \"poweroff\", \"cid\", \"csq\", \"ver\", \"inf\", \"disable-upc\" ] }\n   ]\n}",
      "id": "660315cdf5c83a4ee862b6d5",
      "name": "Queclink - Command Handler - RTO",
      "type": "script"
    },
    {
      "def": "\r\nif(event.endpoint==null) {\r\n    log.warn('no endpoint defined',event.data)\r\n    trigger.reply({error:'no endpoint defined'})\r\n    endpoint.search('key==\"'+event.data.data.key+'\"',searchCallback)\r\n}\r\n\r\nfunction send_raw_command(key, password, command, params, queueOnFailure) {\r\n    var id = random.hex(4)\r\n\r\n    if(params.endsWith('$')) {\r\n        var lastComma = params.lastIndexOf(',')\r\n        params = params.substr(0,lastComma+1)\r\n        //log.trace('trimmed command to: '+command)\r\n    }\r\n\r\n    var fullCommand = 'AT+'+command+'='+password+','+params + id + '$'\r\n    log.trace('sent command ['+fullCommand+'] to ['+key+']')\r\n\r\n    udp.send('',key,fullCommand)\r\n\r\n    var ack = trigger.wait('queclink:'+key+':'+id,10)\r\n\r\n    if(ack) {\r\n        log.trace('received reply ['+JSON.stringify(ack)+'] from ['+key+'] for ['+fullCommand+']')\r\n        return {success: true}\r\n    } else {\r\n        log.trace('timed out waiting for reply from ['+key+'] for ['+fullCommand+']')\r\n        if(queueOnFailure) {\r\n            log.trace('queued', ack)\r\n            udp.queue('',key,command,fullCommand,86400)\r\n        }\r\n        return {success: false, error: 'timeout'}\r\n    }\r\n}\r\n\r\nif(!event.endpoint.tags.type) {\r\n    log.warn('no deviceType tag on endpoint',event.data)\r\n    trigger.reply({error:'no type tag on endpoint'})\r\n}\r\n\r\nvar password = ''\r\nif(event.endpoint.statusDetails && event.endpoint.statusDetails.password) {\r\n    password = event.endpoint.statusDetails.password\r\n} else if(global.values.queclinkPasswords) {\r\n    if(global.values.queclinkPasswords[event.endpoint.tags.type]) {\r\n        password = global.values.queclinkPasswords[event.endpoint.tags.type]\r\n    }\r\n}\r\nif(password.length==0) {\r\n    log.warn('no password available',event.data)\r\n    trigger.reply({error:'no password available'})\r\n}\r\n\r\nsend_raw_command(event.endpoint.key, password, event.data.data.command, event.data.data.arguments, true)\r\ntrigger.reply({success: true})\r\n",
      "filterGeneric": "queclink-command-custom",
      "filterType": "generic",
      "genericSample": "{\n  \"form\": true,\n   \"title\": \"Send custom command\",\n   \"desc\": \"Send a custom command to the device\",\n   \"icon\": \"mdi-camera-control\",\n   \"endpoint\":{ \"required\": true },\n   \"fields\": [\n      { \"name\": \"Command\", \"key\": \"command\", \"type\": \"string\" },\n      { \"name\": \"Arguments\", \"key\": \"arguments\", \"type\": \"string\"}\n   ]\n}",
      "id": "660dce736e3321297a5ed840",
      "name": "Queclink - Command Handler - Custom",
      "type": "script"
    }
  ],
  "doNotStartTriggers": ["64da92706c3caaf84077528f"],
  "triggerGlobals": [
    {
      "key": "queclinkDebug",
      "value": false,
      "isSecret": false,
      "dateCreated": "0001-01-01T00:00:00Z"
    },
    {
      "key": "queclinkAlerts",
      "value": true,
      "isSecret": false,
      "dateCreated": "0001-01-01T00:00:00Z"
    },
    {
      "key": "queclinkPasswords",
      "value": {
        "GL501MG": "gl500m",
        "GL521MG": "gl521m",
        "GV500MA": "gv500",
        "GV53MG": "gv53",
        "GV57MG": "gv57",
        "GV75MG": "gv75m"
      },
      "isSecret": false,
      "dateCreated": "0001-01-01T00:00:00Z"
    }
  ],
  "reports": [
    {
      "fields": [
        {
          "hidden": false,
          "key": "version",
          "name": "Version",
          "required": false,
          "type": "string"
        },
        {
          "hidden": false,
          "key": "command",
          "name": "Command",
          "required": false,
          "type": "string"
        },
        {
          "hidden": false,
          "key": "sample",
          "name": "Sample",
          "required": false,
          "type": "string"
        }
      ],
      "id": "64da92708af95a1777304711",
      "key": "queclink-sampler",
      "name": "Queclink Message Sampler",
      "operations": [
        {
          "inputs": [
            {
              "key": "key",
              "name": "Field Name"
            },
            {
              "key": "value",
              "name": "Field Value"
            }
          ],
          "key": "setValue",
          "name": "Set Value"
        },
        {
          "inputs": [
            {
              "key": "key",
              "name": "Field Name"
            },
            {
              "key": "value",
              "name": "Field Value"
            }
          ],
          "key": "setValue",
          "name": "Set Value"
        }
      ],
      "options": null,
      "records": 0
    }
  ]
}
